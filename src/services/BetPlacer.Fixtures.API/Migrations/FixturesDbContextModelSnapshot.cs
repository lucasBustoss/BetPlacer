// <auto-generated />
using System;
using BetPlacer.Fixtures.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BetPlacer.Fixtures.API.Migrations
{
    [DbContext(typeof(FixturesDbContext))]
    partial class FixturesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BetPlacer.Fixtures.API.Models.FixtureGoalsModel", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Code"));

                    b.Property<int>("FixtureCode")
                        .HasColumnType("integer")
                        .HasColumnName("fixture_code");

                    b.Property<string>("Minute")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("minute");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    b.HasKey("Code")
                        .HasName("p_k_fixture_goals");

                    b.HasIndex("FixtureCode");

                    b.ToTable("fixture_goals");
                });

            modelBuilder.Entity("BetPlacer.Fixtures.API.Models.FixtureModel", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Code"));

                    b.Property<int>("AwayTeamGoals")
                        .HasColumnType("integer")
                        .HasColumnName("away_team_goals");

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("integer")
                        .HasColumnName("away_team_id");

                    b.Property<string>("AwayTeamImage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("away_team_image");

                    b.Property<string>("AwayTeamName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("away_team_name");

                    b.Property<double>("AwayTeamPPG")
                        .HasColumnType("double precision")
                        .HasColumnName("away_team_p_p_g");

                    b.Property<double>("AwayTeamXG")
                        .HasColumnType("double precision")
                        .HasColumnName("away_team_x_g");

                    b.Property<int>("HomeTeamGoals")
                        .HasColumnType("integer")
                        .HasColumnName("home_team_goals");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("integer")
                        .HasColumnName("home_team_id");

                    b.Property<string>("HomeTeamImage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("home_team_image");

                    b.Property<string>("HomeTeamName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("home_team_name");

                    b.Property<double>("HomeTeamPPG")
                        .HasColumnType("double precision")
                        .HasColumnName("home_team_p_p_g");

                    b.Property<double>("HomeTeamXG")
                        .HasColumnType("double precision")
                        .HasColumnName("home_team_x_g");

                    b.Property<int>("SeasonCode")
                        .HasColumnType("integer")
                        .HasColumnName("season_code");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Code")
                        .HasName("p_k_fixtures");

                    b.ToTable("fixtures");
                });

            modelBuilder.Entity("BetPlacer.Fixtures.API.Models.FixtureGoalsModel", b =>
                {
                    b.HasOne("BetPlacer.Fixtures.API.Models.FixtureModel", "Fixture")
                        .WithMany()
                        .HasForeignKey("FixtureCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_fixture_goals__fixtures_fixture_code");

                    b.Navigation("Fixture");
                });
#pragma warning restore 612, 618
        }
    }
}
